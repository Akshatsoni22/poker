{"ast":null,"code":"import { ADMIN_GET_NEWSLETTER_RESET, ADMIN_GET_NEWSLETTER_REQUEST, ADMIN_GET_NEWSLETTER_SUCCESS, ADMIN_GET_NEWSLETTER_FAIL, ADMIN_NEWSLETTER_DELETE_RESET, ADMIN_NEWSLETTER_DELETE_REQUEST, ADMIN_NEWSLETTER_DELETE_SUCCESS, ADMIN_NEWSLETTER_DELETE_FAIL } from \"../../Constants/NewsletterConstants\";\nimport { POSTAUTHAPI } from '../../Api/Index';\nexport const AdminGetNewsletterAction = payload => async dispatch => {\n  if (payload === 'RESET') {\n    dispatch({\n      type: ADMIN_GET_NEWSLETTER_RESET\n    });\n  } else {\n    try {\n      dispatch({\n        type: ADMIN_GET_NEWSLETTER_REQUEST\n      });\n      let data = await POSTAUTHAPI('get-category', payload);\n\n      if (data && (data === null || data === void 0 ? void 0 : data.status) === true) {\n        dispatch({\n          type: ADMIN_GET_NEWSLETTER_SUCCESS,\n          payload: data\n        });\n      } else {\n        dispatch({\n          type: ADMIN_GET_NEWSLETTER_FAIL,\n          payload: data\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: ADMIN_GET_NEWSLETTER_FAIL,\n        payload: error.message\n      });\n    }\n  }\n};\nexport const AdminDeleteNewsletterAction = payload => async dispatch => {\n  if (payload === 'RESET') {\n    dispatch({\n      type: ADMIN_NEWSLETTER_DELETE_RESET\n    });\n  } else {\n    try {\n      dispatch({\n        type: ADMIN_NEWSLETTER_DELETE_REQUEST\n      });\n      let data = await POSTAUTHAPI('delete-category', payload);\n\n      if (data && (data === null || data === void 0 ? void 0 : data.status) === true) {\n        dispatch({\n          type: ADMIN_NEWSLETTER_DELETE_SUCCESS,\n          payload: data\n        });\n      } else {\n        dispatch({\n          type: ADMIN_NEWSLETTER_DELETE_FAIL,\n          payload: data\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: ADMIN_NEWSLETTER_DELETE_FAIL,\n        payload: error.message\n      });\n    }\n  }\n};","map":{"version":3,"names":["ADMIN_GET_NEWSLETTER_RESET","ADMIN_GET_NEWSLETTER_REQUEST","ADMIN_GET_NEWSLETTER_SUCCESS","ADMIN_GET_NEWSLETTER_FAIL","ADMIN_NEWSLETTER_DELETE_RESET","ADMIN_NEWSLETTER_DELETE_REQUEST","ADMIN_NEWSLETTER_DELETE_SUCCESS","ADMIN_NEWSLETTER_DELETE_FAIL","POSTAUTHAPI","AdminGetNewsletterAction","payload","dispatch","type","data","status","error","message","AdminDeleteNewsletterAction"],"sources":["/home/nhz/admin (1)/src/Redux/Actions/NewsletterActions.tsx"],"sourcesContent":["import { Dispatch } from \"react\";\nimport {\n    ADMIN_GET_NEWSLETTER_RESET,\n    ADMIN_GET_NEWSLETTER_REQUEST,\n    ADMIN_GET_NEWSLETTER_SUCCESS,\n    ADMIN_GET_NEWSLETTER_FAIL,\n\n    ADMIN_NEWSLETTER_DELETE_RESET,\n    ADMIN_NEWSLETTER_DELETE_REQUEST,\n    ADMIN_NEWSLETTER_DELETE_SUCCESS,\n    ADMIN_NEWSLETTER_DELETE_FAIL,\n\n} from \"../../Constants/NewsletterConstants\";\nimport { POSTAUTHAPI } from '../../Api/Index';\n\nexport const AdminGetNewsletterAction = (payload: any) => async (dispatch: Dispatch<any>) => {\n    if (payload === 'RESET') {\n        dispatch({ type: ADMIN_GET_NEWSLETTER_RESET });\n    }\n    else {\n        try {\n            dispatch({\n                type: ADMIN_GET_NEWSLETTER_REQUEST\n            });\n            let data = await POSTAUTHAPI('get-category', payload);\n            if (data && data?.status === true) {\n                dispatch({\n                    type: ADMIN_GET_NEWSLETTER_SUCCESS,\n                    payload: data\n                });\n            }\n            else {\n                dispatch({\n                    type: ADMIN_GET_NEWSLETTER_FAIL,\n                    payload: data\n                });\n            }\n        }\n        catch (error: any) {\n            dispatch({\n                type: ADMIN_GET_NEWSLETTER_FAIL,\n                payload: error.message\n            });\n        }\n    }\n};\n\nexport const AdminDeleteNewsletterAction = (payload: any) => async (dispatch: Dispatch<any>) => {\n    if (payload === 'RESET') {\n        dispatch({ type: ADMIN_NEWSLETTER_DELETE_RESET });\n    }\n    else {\n        try {\n            dispatch({\n                type: ADMIN_NEWSLETTER_DELETE_REQUEST\n            });\n            let data = await POSTAUTHAPI('delete-category', payload);\n            if (data && data?.status === true) {\n                dispatch({\n                    type: ADMIN_NEWSLETTER_DELETE_SUCCESS,\n                    payload: data\n                });\n            }\n            else {\n                dispatch({\n                    type: ADMIN_NEWSLETTER_DELETE_FAIL,\n                    payload: data\n                });\n            }\n        }\n        catch (error: any) {\n            dispatch({\n                type: ADMIN_NEWSLETTER_DELETE_FAIL,\n                payload: error.message\n            });\n        }\n    }\n};"],"mappings":"AACA,SACIA,0BADJ,EAEIC,4BAFJ,EAGIC,4BAHJ,EAIIC,yBAJJ,EAMIC,6BANJ,EAOIC,+BAPJ,EAQIC,+BARJ,EASIC,4BATJ,QAWO,qCAXP;AAYA,SAASC,WAAT,QAA4B,iBAA5B;AAEA,OAAO,MAAMC,wBAAwB,GAAIC,OAAD,IAAkB,MAAOC,QAAP,IAAmC;EACzF,IAAID,OAAO,KAAK,OAAhB,EAAyB;IACrBC,QAAQ,CAAC;MAAEC,IAAI,EAAEZ;IAAR,CAAD,CAAR;EACH,CAFD,MAGK;IACD,IAAI;MACAW,QAAQ,CAAC;QACLC,IAAI,EAAEX;MADD,CAAD,CAAR;MAGA,IAAIY,IAAI,GAAG,MAAML,WAAW,CAAC,cAAD,EAAiBE,OAAjB,CAA5B;;MACA,IAAIG,IAAI,IAAI,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEC,MAAN,MAAiB,IAA7B,EAAmC;QAC/BH,QAAQ,CAAC;UACLC,IAAI,EAAEV,4BADD;UAELQ,OAAO,EAAEG;QAFJ,CAAD,CAAR;MAIH,CALD,MAMK;QACDF,QAAQ,CAAC;UACLC,IAAI,EAAET,yBADD;UAELO,OAAO,EAAEG;QAFJ,CAAD,CAAR;MAIH;IACJ,CAjBD,CAkBA,OAAOE,KAAP,EAAmB;MACfJ,QAAQ,CAAC;QACLC,IAAI,EAAET,yBADD;QAELO,OAAO,EAAEK,KAAK,CAACC;MAFV,CAAD,CAAR;IAIH;EACJ;AACJ,CA9BM;AAgCP,OAAO,MAAMC,2BAA2B,GAAIP,OAAD,IAAkB,MAAOC,QAAP,IAAmC;EAC5F,IAAID,OAAO,KAAK,OAAhB,EAAyB;IACrBC,QAAQ,CAAC;MAAEC,IAAI,EAAER;IAAR,CAAD,CAAR;EACH,CAFD,MAGK;IACD,IAAI;MACAO,QAAQ,CAAC;QACLC,IAAI,EAAEP;MADD,CAAD,CAAR;MAGA,IAAIQ,IAAI,GAAG,MAAML,WAAW,CAAC,iBAAD,EAAoBE,OAApB,CAA5B;;MACA,IAAIG,IAAI,IAAI,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEC,MAAN,MAAiB,IAA7B,EAAmC;QAC/BH,QAAQ,CAAC;UACLC,IAAI,EAAEN,+BADD;UAELI,OAAO,EAAEG;QAFJ,CAAD,CAAR;MAIH,CALD,MAMK;QACDF,QAAQ,CAAC;UACLC,IAAI,EAAEL,4BADD;UAELG,OAAO,EAAEG;QAFJ,CAAD,CAAR;MAIH;IACJ,CAjBD,CAkBA,OAAOE,KAAP,EAAmB;MACfJ,QAAQ,CAAC;QACLC,IAAI,EAAEL,4BADD;QAELG,OAAO,EAAEK,KAAK,CAACC;MAFV,CAAD,CAAR;IAIH;EACJ;AACJ,CA9BM"},"metadata":{},"sourceType":"module"}