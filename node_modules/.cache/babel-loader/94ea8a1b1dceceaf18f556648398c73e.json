{"ast":null,"code":"import { isIPv6, isIPv4 } from 'is-ip';\nimport { createPublicIp, IpNotFoundError } from './core.js';\nexport class CancelError extends Error {\n  constructor() {\n    super('Request was cancelled');\n    this.name = 'CancelError';\n  }\n\n  get isCanceled() {\n    return true;\n  }\n\n}\nexport { IpNotFoundError } from './core.js';\nconst defaults = {\n  timeout: 5000\n};\nconst urls = {\n  v4: ['https://ipv4.icanhazip.com/', 'https://api.ipify.org/'],\n  v6: ['https://ipv6.icanhazip.com/', 'https://api6.ipify.org/']\n};\n\nconst sendXhr = (url, options, version) => {\n  const xhr = new XMLHttpRequest();\n\n  let _reject;\n\n  const promise = new Promise((resolve, reject) => {\n    _reject = reject;\n    xhr.addEventListener('error', reject, {\n      once: true\n    });\n    xhr.addEventListener('timeout', reject, {\n      once: true\n    });\n    xhr.addEventListener('load', () => {\n      const ip = xhr.responseText.trim();\n      const method = version === 'v6' ? isIPv6 : isIPv4;\n\n      if (!ip || !method(ip)) {\n        reject();\n        return;\n      }\n\n      resolve(ip);\n    }, {\n      once: true\n    });\n    xhr.open('GET', url);\n    xhr.timeout = options.timeout;\n    xhr.send();\n  });\n\n  promise.cancel = () => {\n    xhr.abort();\n\n    _reject(new CancelError());\n  };\n\n  return promise;\n};\n\nconst queryHttps = (version, options) => {\n  let request;\n\n  const promise = async function () {\n    const urls_ = [...urls[version], ...(options.fallbackUrls ?? [])];\n    let lastError;\n\n    for (const url of urls_) {\n      try {\n        request = sendXhr(url, options, version); // eslint-disable-next-line no-await-in-loop\n\n        const ip = await request;\n        return ip;\n      } catch (error) {\n        lastError = error;\n\n        if (error instanceof CancelError) {\n          throw error;\n        }\n      }\n    }\n\n    throw new IpNotFoundError({\n      cause: lastError\n    });\n  }();\n\n  promise.cancel = () => {\n    request.cancel();\n  };\n\n  return promise;\n};\n\nexport const publicIp = createPublicIp(publicIpv4, publicIpv6);\nexport function publicIpv4(options) {\n  return queryHttps('v4', { ...defaults,\n    ...options\n  });\n}\nexport function publicIpv6(options) {\n  return queryHttps('v6', { ...defaults,\n    ...options\n  });\n}","map":{"version":3,"names":["isIPv6","isIPv4","createPublicIp","IpNotFoundError","CancelError","Error","constructor","name","isCanceled","defaults","timeout","urls","v4","v6","sendXhr","url","options","version","xhr","XMLHttpRequest","_reject","promise","Promise","resolve","reject","addEventListener","once","ip","responseText","trim","method","open","send","cancel","abort","queryHttps","request","urls_","fallbackUrls","lastError","error","cause","publicIp","publicIpv4","publicIpv6"],"sources":["/home/nhz/admin (1)/node_modules/public-ip/browser.js"],"sourcesContent":["import {isIPv6, isIPv4} from 'is-ip';\nimport {createPublicIp, IpNotFoundError} from './core.js';\n\nexport class CancelError extends Error {\n\tconstructor() {\n\t\tsuper('Request was cancelled');\n\t\tthis.name = 'CancelError';\n\t}\n\n\tget isCanceled() {\n\t\treturn true;\n\t}\n}\n\nexport {IpNotFoundError} from './core.js';\n\nconst defaults = {\n\ttimeout: 5000,\n};\n\nconst urls = {\n\tv4: [\n\t\t'https://ipv4.icanhazip.com/',\n\t\t'https://api.ipify.org/',\n\t],\n\tv6: [\n\t\t'https://ipv6.icanhazip.com/',\n\t\t'https://api6.ipify.org/',\n\t],\n};\n\nconst sendXhr = (url, options, version) => {\n\tconst xhr = new XMLHttpRequest();\n\n\tlet _reject;\n\tconst promise = new Promise((resolve, reject) => {\n\t\t_reject = reject;\n\t\txhr.addEventListener('error', reject, {once: true});\n\t\txhr.addEventListener('timeout', reject, {once: true});\n\n\t\txhr.addEventListener('load', () => {\n\t\t\tconst ip = xhr.responseText.trim();\n\t\t\tconst method = version === 'v6' ? isIPv6 : isIPv4;\n\n\t\t\tif (!ip || !method(ip)) {\n\t\t\t\treject();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresolve(ip);\n\t\t}, {once: true});\n\n\t\txhr.open('GET', url);\n\t\txhr.timeout = options.timeout;\n\t\txhr.send();\n\t});\n\n\tpromise.cancel = () => {\n\t\txhr.abort();\n\t\t_reject(new CancelError());\n\t};\n\n\treturn promise;\n};\n\nconst queryHttps = (version, options) => {\n\tlet request;\n\tconst promise = (async function () {\n\t\tconst urls_ = [\n\t\t\t...urls[version],\n\t\t\t...(options.fallbackUrls ?? []),\n\t\t];\n\n\t\tlet lastError;\n\t\tfor (const url of urls_) {\n\t\t\ttry {\n\t\t\t\trequest = sendXhr(url, options, version);\n\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\tconst ip = await request;\n\t\t\t\treturn ip;\n\t\t\t} catch (error) {\n\t\t\t\tlastError = error;\n\n\t\t\t\tif (error instanceof CancelError) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthrow new IpNotFoundError({cause: lastError});\n\t})();\n\n\tpromise.cancel = () => {\n\t\trequest.cancel();\n\t};\n\n\treturn promise;\n};\n\nexport const publicIp = createPublicIp(publicIpv4, publicIpv6);\n\nexport function publicIpv4(options) {\n\treturn queryHttps('v4', {...defaults, ...options});\n}\n\nexport function publicIpv6(options) {\n\treturn queryHttps('v6', {...defaults, ...options});\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}