{"ast":null,"code":"var _jsxFileName = \"/home/nhz/admin (1)/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { REACT_APP_BASE_URL } from './Config/Config';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AdminGetProfileAction } from './Redux/Actions/AuthActions'; // Routes\n\nimport PrivateRoutes from './Router/PrivateRoutes'; // Components\n// Auth Component\n\nimport Login from './Components/Auth/Login';\nimport ForgotPassword from './Components/Auth/ForgotPassword';\nimport RestPassword from './Components/Auth/RestPassword';\nimport Profile from './Components/Auth/Profile';\nimport ChangePassword from './Components/Auth/ChangePassword'; // Dashboard Component\n\nimport Dashboard from './Components/Dashboard/Index'; // Not Found Component\n\nimport PageNotFound from './Components/Error/PageNotFound';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    status_get_profile\n  } = useSelector(state => state.AdminGetProfileState);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const isAdminLoginToken = localStorage.getItem('isAdminLoginToken');\n\n    if (isAdminLoginToken) {\n      if (status_get_profile === false) {\n        // if (window.performance) {\n        // if (performance.navigation.type == 1) {\n        dispatch(AdminGetProfileAction({})); // }\n        // }\n      }\n    }\n  }, [status_get_profile]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          element: /*#__PURE__*/_jsxDEV(PrivateRoutes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 27\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: REACT_APP_BASE_URL,\n            element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 55\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: REACT_APP_BASE_URL + \"profile\",\n            element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 67\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: REACT_APP_BASE_URL + \"change-password\",\n            element: /*#__PURE__*/_jsxDEV(ChangePassword, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 75\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: REACT_APP_BASE_URL + \"login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: REACT_APP_BASE_URL + \"forgot-password\",\n          element: /*#__PURE__*/_jsxDEV(ForgotPassword, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 73\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: REACT_APP_BASE_URL + \"reset-password\",\n          element: /*#__PURE__*/_jsxDEV(RestPassword, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 72\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: REACT_APP_BASE_URL + \"*\",\n          element: /*#__PURE__*/_jsxDEV(PageNotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 59\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"1ZQzWkaNT4Oup8kAKjJ7mnNEiIE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Fragment","useEffect","BrowserRouter","Router","Route","Routes","REACT_APP_BASE_URL","useSelector","useDispatch","AdminGetProfileAction","PrivateRoutes","Login","ForgotPassword","RestPassword","Profile","ChangePassword","Dashboard","PageNotFound","App","status_get_profile","state","AdminGetProfileState","dispatch","isAdminLoginToken","localStorage","getItem"],"sources":["/home/nhz/admin (1)/src/App.tsx"],"sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { REACT_APP_BASE_URL } from './Config/Config';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AdminGetProfileAction } from './Redux/Actions/AuthActions';\n\n// Routes\nimport PrivateRoutes from './Router/PrivateRoutes';\n\n// Components\n// Auth Component\nimport Login from './Components/Auth/Login';\nimport ForgotPassword from './Components/Auth/ForgotPassword';\nimport RestPassword from './Components/Auth/RestPassword';\n\nimport Profile from './Components/Auth/Profile';\nimport ChangePassword from './Components/Auth/ChangePassword';\n\n// Dashboard Component\nimport Dashboard from './Components/Dashboard/Index';\n\n\n// Not Found Component\nimport PageNotFound from './Components/Error/PageNotFound';\n\nfunction App() {\n  const { status_get_profile } = useSelector((state: any) => state.AdminGetProfileState);\n  const dispatch = useDispatch<any>();\n  useEffect(() => {\n    const isAdminLoginToken = localStorage.getItem('isAdminLoginToken');\n    if (isAdminLoginToken) {\n      if (status_get_profile === false) {\n        // if (window.performance) {\n        // if (performance.navigation.type == 1) {\n        dispatch(AdminGetProfileAction({}));\n        // }\n        // }\n      }\n    }\n  }, [status_get_profile]);\n  return (\n    <Fragment>\n      <Router>\n        <Routes>\n          <Route element={<PrivateRoutes />} >\n            {/* Dashboard Route */}\n            <Route path={REACT_APP_BASE_URL} element={<Dashboard />} />\n\n            {/* Auth Route */}\n            <Route path={REACT_APP_BASE_URL + \"profile\"} element={<Profile />} />\n            <Route path={REACT_APP_BASE_URL + \"change-password\"} element={<ChangePassword />} />\n\n            \n          </Route>\n\n          {/* Auth Route */}\n          <Route path={REACT_APP_BASE_URL + \"login\"} element={<Login />} />\n          <Route path={REACT_APP_BASE_URL + \"forgot-password\"} element={<ForgotPassword />} />\n          <Route path={REACT_APP_BASE_URL + \"reset-password\"} element={<RestPassword />} />\n\n          {/* Not Found Route */}\n          <Route path={REACT_APP_BASE_URL + \"*\"} element={<PageNotFound />} />\n        </Routes>\n      </Router>\n    </Fragment>\n  );\n}\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}