{"ast":null,"code":"import os from 'os';\nimport escapeStringRegexp from 'escape-string-regexp';\nconst extractPathRegex = /\\s+at.*[(\\s](.*)\\)?/;\nconst pathRegex = /^(?:(?:(?:node|node:[\\w/]+|(?:(?:node:)?internal\\/[\\w/]*|.*node_modules\\/(?:babel-polyfill|pirates)\\/.*)?\\w+)(?:\\.js)?:\\d+:\\d+)|native)/;\nconst homeDir = typeof os.homedir === 'undefined' ? '' : os.homedir().replace(/\\\\/g, '/');\nexport default function cleanStack(stack) {\n  let {\n    pretty = false,\n    basePath\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const basePathRegex = basePath && new RegExp(`(at | \\\\()${escapeStringRegexp(basePath.replace(/\\\\/g, '/'))}`, 'g');\n\n  if (typeof stack !== 'string') {\n    return undefined;\n  }\n\n  return stack.replace(/\\\\/g, '/').split('\\n').filter(line => {\n    const pathMatches = line.match(extractPathRegex);\n\n    if (pathMatches === null || !pathMatches[1]) {\n      return true;\n    }\n\n    const match = pathMatches[1]; // Electron\n\n    if (match.includes('.app/Contents/Resources/electron.asar') || match.includes('.app/Contents/Resources/default_app.asar') || match.includes('node_modules/electron/dist/resources/electron.asar') || match.includes('node_modules/electron/dist/resources/default_app.asar')) {\n      return false;\n    }\n\n    return !pathRegex.test(match);\n  }).filter(line => line.trim() !== '').map(line => {\n    if (basePathRegex) {\n      line = line.replace(basePathRegex, '$1');\n    }\n\n    if (pretty) {\n      line = line.replace(extractPathRegex, (m, p1) => m.replace(p1, p1.replace(homeDir, '~')));\n    }\n\n    return line;\n  }).join('\\n');\n}","map":{"version":3,"names":["os","escapeStringRegexp","extractPathRegex","pathRegex","homeDir","homedir","replace","cleanStack","stack","pretty","basePath","basePathRegex","RegExp","undefined","split","filter","line","pathMatches","match","includes","test","trim","map","m","p1","join"],"sources":["/home/nhz/admin (1)/node_modules/clean-stack/index.js"],"sourcesContent":["import os from 'os';\nimport escapeStringRegexp from 'escape-string-regexp';\n\nconst extractPathRegex = /\\s+at.*[(\\s](.*)\\)?/;\nconst pathRegex = /^(?:(?:(?:node|node:[\\w/]+|(?:(?:node:)?internal\\/[\\w/]*|.*node_modules\\/(?:babel-polyfill|pirates)\\/.*)?\\w+)(?:\\.js)?:\\d+:\\d+)|native)/;\nconst homeDir = typeof os.homedir === 'undefined' ? '' : os.homedir().replace(/\\\\/g, '/');\n\nexport default function cleanStack(stack, {pretty = false, basePath} = {}) {\n\tconst basePathRegex = basePath && new RegExp(`(at | \\\\()${escapeStringRegexp(basePath.replace(/\\\\/g, '/'))}`, 'g');\n\n\tif (typeof stack !== 'string') {\n\t\treturn undefined;\n\t}\n\n\treturn stack.replace(/\\\\/g, '/')\n\t\t.split('\\n')\n\t\t.filter(line => {\n\t\t\tconst pathMatches = line.match(extractPathRegex);\n\t\t\tif (pathMatches === null || !pathMatches[1]) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst match = pathMatches[1];\n\n\t\t\t// Electron\n\t\t\tif (\n\t\t\t\tmatch.includes('.app/Contents/Resources/electron.asar') ||\n\t\t\t\tmatch.includes('.app/Contents/Resources/default_app.asar') ||\n\t\t\t\tmatch.includes('node_modules/electron/dist/resources/electron.asar') ||\n\t\t\t\tmatch.includes('node_modules/electron/dist/resources/default_app.asar')\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn !pathRegex.test(match);\n\t\t})\n\t\t.filter(line => line.trim() !== '')\n\t\t.map(line => {\n\t\t\tif (basePathRegex) {\n\t\t\t\tline = line.replace(basePathRegex, '$1');\n\t\t\t}\n\n\t\t\tif (pretty) {\n\t\t\t\tline = line.replace(extractPathRegex, (m, p1) => m.replace(p1, p1.replace(homeDir, '~')));\n\t\t\t}\n\n\t\t\treturn line;\n\t\t})\n\t\t.join('\\n');\n}\n"],"mappings":"AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AAEA,MAAMC,gBAAgB,GAAG,qBAAzB;AACA,MAAMC,SAAS,GAAG,yIAAlB;AACA,MAAMC,OAAO,GAAG,OAAOJ,EAAE,CAACK,OAAV,KAAsB,WAAtB,GAAoC,EAApC,GAAyCL,EAAE,CAACK,OAAH,GAAaC,OAAb,CAAqB,KAArB,EAA4B,GAA5B,CAAzD;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA4D;EAAA,IAAjC;IAACC,MAAM,GAAG,KAAV;IAAiBC;EAAjB,CAAiC,uEAAJ,EAAI;EAC1E,MAAMC,aAAa,GAAGD,QAAQ,IAAI,IAAIE,MAAJ,CAAY,aAAYX,kBAAkB,CAACS,QAAQ,CAACJ,OAAT,CAAiB,KAAjB,EAAwB,GAAxB,CAAD,CAA+B,EAAzE,EAA4E,GAA5E,CAAlC;;EAEA,IAAI,OAAOE,KAAP,KAAiB,QAArB,EAA+B;IAC9B,OAAOK,SAAP;EACA;;EAED,OAAOL,KAAK,CAACF,OAAN,CAAc,KAAd,EAAqB,GAArB,EACLQ,KADK,CACC,IADD,EAELC,MAFK,CAEEC,IAAI,IAAI;IACf,MAAMC,WAAW,GAAGD,IAAI,CAACE,KAAL,CAAWhB,gBAAX,CAApB;;IACA,IAAIe,WAAW,KAAK,IAAhB,IAAwB,CAACA,WAAW,CAAC,CAAD,CAAxC,EAA6C;MAC5C,OAAO,IAAP;IACA;;IAED,MAAMC,KAAK,GAAGD,WAAW,CAAC,CAAD,CAAzB,CANe,CAQf;;IACA,IACCC,KAAK,CAACC,QAAN,CAAe,uCAAf,KACAD,KAAK,CAACC,QAAN,CAAe,0CAAf,CADA,IAEAD,KAAK,CAACC,QAAN,CAAe,oDAAf,CAFA,IAGAD,KAAK,CAACC,QAAN,CAAe,uDAAf,CAJD,EAKE;MACD,OAAO,KAAP;IACA;;IAED,OAAO,CAAChB,SAAS,CAACiB,IAAV,CAAeF,KAAf,CAAR;EACA,CArBK,EAsBLH,MAtBK,CAsBEC,IAAI,IAAIA,IAAI,CAACK,IAAL,OAAgB,EAtB1B,EAuBLC,GAvBK,CAuBDN,IAAI,IAAI;IACZ,IAAIL,aAAJ,EAAmB;MAClBK,IAAI,GAAGA,IAAI,CAACV,OAAL,CAAaK,aAAb,EAA4B,IAA5B,CAAP;IACA;;IAED,IAAIF,MAAJ,EAAY;MACXO,IAAI,GAAGA,IAAI,CAACV,OAAL,CAAaJ,gBAAb,EAA+B,CAACqB,CAAD,EAAIC,EAAJ,KAAWD,CAAC,CAACjB,OAAF,CAAUkB,EAAV,EAAcA,EAAE,CAAClB,OAAH,CAAWF,OAAX,EAAoB,GAApB,CAAd,CAA1C,CAAP;IACA;;IAED,OAAOY,IAAP;EACA,CAjCK,EAkCLS,IAlCK,CAkCA,IAlCA,CAAP;AAmCA"},"metadata":{},"sourceType":"module"}