{"ast":null,"code":"var _jsxFileName = \"/home/nhz/admin (1)/src/Router/PrivateRoutes.tsx\",\n    _s = $RefreshSig$();\n\nimport { Navigate, Outlet, useLocation } from 'react-router-dom';\nimport { REACT_APP_BASE_URL } from '../Config/Config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoutes = () => {\n  _s();\n\n  const location = useLocation();\n  const isAdminLoginToken = localStorage.getItem('isAdminLoginToken');\n  return isAdminLoginToken ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 11\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: REACT_APP_BASE_URL + \"login\",\n    replace: true,\n    state: \"{{ from: location }}\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 11\n  }, this);\n};\n\n_s(PrivateRoutes, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = PrivateRoutes;\nexport default PrivateRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoutes\");","map":{"version":3,"names":["Navigate","Outlet","useLocation","REACT_APP_BASE_URL","PrivateRoutes","location","isAdminLoginToken","localStorage","getItem"],"sources":["/home/nhz/admin (1)/src/Router/PrivateRoutes.tsx"],"sourcesContent":["import { Navigate, Outlet, useLocation } from 'react-router-dom';\nimport { REACT_APP_BASE_URL } from '../Config/Config';\n\nconst PrivateRoutes = () => {\n    const location = useLocation();\n    const isAdminLoginToken  = localStorage.getItem('isAdminLoginToken');\n    return isAdminLoginToken \n        ? <Outlet />\n        : <Navigate to={REACT_APP_BASE_URL + \"login\"} replace state=\"{{ from: location }}\" />;\n}\n\nexport default PrivateRoutes;"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;;AAEA,MAAMC,aAAa,GAAG,MAAM;EAAA;;EACxB,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;EACA,MAAMI,iBAAiB,GAAIC,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAA3B;EACA,OAAOF,iBAAiB,gBAClB,QAAC,MAAD;IAAA;IAAA;IAAA;EAAA,QADkB,gBAElB,QAAC,QAAD;IAAU,EAAE,EAAEH,kBAAkB,GAAG,OAAnC;IAA4C,OAAO,MAAnD;IAAoD,KAAK,EAAC;EAA1D;IAAA;IAAA;IAAA;EAAA,QAFN;AAGH,CAND;;GAAMC,a;UACeF,W;;;KADfE,a;AAQN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}