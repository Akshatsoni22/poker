{"ast":null,"code":"import { renderFormData } from \"../../Utils/Helper\";\nimport { ADMIN_UPDATE_PROFILE_RESET, ADMIN_UPDATE_PROFILE_REQUEST, ADMIN_UPDATE_PROFILE_SUCCESS, ADMIN_UPDATE_PROFILE_FAIL, ADMIN_GET_PROFILE_REQUEST, ADMIN_GET_PROFILE_SUCCESS, ADMIN_GET_PROFILE_FAIL } from \"../../Constants/AuthConstants\";\nimport { PUTAUTHAPI, GETAUTHAPI } from '../../Api/Index';\nexport const AdminUpdateProfileAction = payload => async dispatch => {\n  if (payload === 'RESET') {\n    dispatch({\n      type: ADMIN_UPDATE_PROFILE_RESET\n    });\n  } else {\n    try {\n      dispatch({\n        type: ADMIN_UPDATE_PROFILE_REQUEST\n      });\n      let payloadData = await renderFormData(payload);\n      let data = await PUTAUTHAPI('update-profile', payloadData);\n\n      if (data && (data === null || data === void 0 ? void 0 : data.status) === true) {\n        dispatch({\n          type: ADMIN_UPDATE_PROFILE_SUCCESS,\n          payload: data\n        });\n      } else {\n        dispatch({\n          type: ADMIN_UPDATE_PROFILE_FAIL,\n          payload: data\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: ADMIN_UPDATE_PROFILE_FAIL,\n        payload: error.message\n      });\n    }\n  }\n};\nexport const AdminGetProfileAction = payload => async dispatch => {\n  try {\n    dispatch({\n      type: ADMIN_GET_PROFILE_REQUEST\n    });\n    let data = await GETAUTHAPI('profile', payload);\n\n    if (data && (data === null || data === void 0 ? void 0 : data.status) === true) {\n      dispatch({\n        type: ADMIN_GET_PROFILE_SUCCESS,\n        payload: data\n      });\n    } else {\n      dispatch({\n        type: ADMIN_GET_PROFILE_FAIL,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: ADMIN_GET_PROFILE_FAIL,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"names":["renderFormData","ADMIN_UPDATE_PROFILE_RESET","ADMIN_UPDATE_PROFILE_REQUEST","ADMIN_UPDATE_PROFILE_SUCCESS","ADMIN_UPDATE_PROFILE_FAIL","ADMIN_GET_PROFILE_REQUEST","ADMIN_GET_PROFILE_SUCCESS","ADMIN_GET_PROFILE_FAIL","PUTAUTHAPI","GETAUTHAPI","AdminUpdateProfileAction","payload","dispatch","type","payloadData","data","status","error","message","AdminGetProfileAction"],"sources":["/home/nhz/paneladmin/src/Redux/Actions/AuthActions.tsx"],"sourcesContent":["import { Dispatch } from \"react\";\nimport { renderFormData } from \"../../Utils/Helper\";\nimport {\n   \n    ADMIN_LOGIN_REQUEST,\n    ADMIN_LOGIN_SUCCESS,\n    ADMIN_LOGIN_FAIL,\n\n    ADMIN_UPDATE_PROFILE_RESET,\n    ADMIN_UPDATE_PROFILE_REQUEST,\n    ADMIN_UPDATE_PROFILE_SUCCESS,\n    ADMIN_UPDATE_PROFILE_FAIL,\n\n    ADMIN_GET_PROFILE_REQUEST,\n    ADMIN_GET_PROFILE_SUCCESS,\n    ADMIN_GET_PROFILE_FAIL\n} from \"../../Constants/AuthConstants\";\nimport { POSTAPI, PUTAUTHAPI, GETAUTHAPI } from '../../Api/Index';\n\n\n\n\nexport const AdminUpdateProfileAction = (payload: any) => async (dispatch: Dispatch<any>) => {\n    if (payload === 'RESET') {\n        dispatch({ type: ADMIN_UPDATE_PROFILE_RESET });\n    }\n    else {\n        try {\n            dispatch({\n                type: ADMIN_UPDATE_PROFILE_REQUEST\n            });\n            let payloadData = await renderFormData(payload);\n            let data = await PUTAUTHAPI('update-profile', payloadData);\n            if (data && data?.status === true) {\n                dispatch({\n                    type: ADMIN_UPDATE_PROFILE_SUCCESS,\n                    payload: data\n                });\n            }\n            else {\n                dispatch({\n                    type: ADMIN_UPDATE_PROFILE_FAIL,\n                    payload: data\n                });\n            }\n        }\n        catch (error: any) {\n            dispatch({\n                type: ADMIN_UPDATE_PROFILE_FAIL,\n                payload: error.message\n            });\n        }\n    }\n};\n\nexport const AdminGetProfileAction = (payload: any) => async (dispatch: Dispatch<any>) => {\n    try {\n        dispatch({\n            type: ADMIN_GET_PROFILE_REQUEST\n        });\n        let data = await GETAUTHAPI('profile', payload);\n        if (data && data?.status === true) {\n            dispatch({\n                type: ADMIN_GET_PROFILE_SUCCESS,\n                payload: data\n            });\n        }\n        else {\n            dispatch({\n                type: ADMIN_GET_PROFILE_FAIL,\n                payload: data\n            });\n        }\n    }\n    catch (error: any) {\n        dispatch({\n            type: ADMIN_GET_PROFILE_FAIL,\n            payload: error.message\n        });\n    }\n};"],"mappings":"AACA,SAASA,cAAT,QAA+B,oBAA/B;AACA,SAMIC,0BANJ,EAOIC,4BAPJ,EAQIC,4BARJ,EASIC,yBATJ,EAWIC,yBAXJ,EAYIC,yBAZJ,EAaIC,sBAbJ,QAcO,+BAdP;AAeA,SAAkBC,UAAlB,EAA8BC,UAA9B,QAAgD,iBAAhD;AAKA,OAAO,MAAMC,wBAAwB,GAAIC,OAAD,IAAkB,MAAOC,QAAP,IAAmC;EACzF,IAAID,OAAO,KAAK,OAAhB,EAAyB;IACrBC,QAAQ,CAAC;MAAEC,IAAI,EAAEZ;IAAR,CAAD,CAAR;EACH,CAFD,MAGK;IACD,IAAI;MACAW,QAAQ,CAAC;QACLC,IAAI,EAAEX;MADD,CAAD,CAAR;MAGA,IAAIY,WAAW,GAAG,MAAMd,cAAc,CAACW,OAAD,CAAtC;MACA,IAAII,IAAI,GAAG,MAAMP,UAAU,CAAC,gBAAD,EAAmBM,WAAnB,CAA3B;;MACA,IAAIC,IAAI,IAAI,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEC,MAAN,MAAiB,IAA7B,EAAmC;QAC/BJ,QAAQ,CAAC;UACLC,IAAI,EAAEV,4BADD;UAELQ,OAAO,EAAEI;QAFJ,CAAD,CAAR;MAIH,CALD,MAMK;QACDH,QAAQ,CAAC;UACLC,IAAI,EAAET,yBADD;UAELO,OAAO,EAAEI;QAFJ,CAAD,CAAR;MAIH;IACJ,CAlBD,CAmBA,OAAOE,KAAP,EAAmB;MACfL,QAAQ,CAAC;QACLC,IAAI,EAAET,yBADD;QAELO,OAAO,EAAEM,KAAK,CAACC;MAFV,CAAD,CAAR;IAIH;EACJ;AACJ,CA/BM;AAiCP,OAAO,MAAMC,qBAAqB,GAAIR,OAAD,IAAkB,MAAOC,QAAP,IAAmC;EACtF,IAAI;IACAA,QAAQ,CAAC;MACLC,IAAI,EAAER;IADD,CAAD,CAAR;IAGA,IAAIU,IAAI,GAAG,MAAMN,UAAU,CAAC,SAAD,EAAYE,OAAZ,CAA3B;;IACA,IAAII,IAAI,IAAI,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEC,MAAN,MAAiB,IAA7B,EAAmC;MAC/BJ,QAAQ,CAAC;QACLC,IAAI,EAAEP,yBADD;QAELK,OAAO,EAAEI;MAFJ,CAAD,CAAR;IAIH,CALD,MAMK;MACDH,QAAQ,CAAC;QACLC,IAAI,EAAEN,sBADD;QAELI,OAAO,EAAEI;MAFJ,CAAD,CAAR;IAIH;EACJ,CAjBD,CAkBA,OAAOE,KAAP,EAAmB;IACfL,QAAQ,CAAC;MACLC,IAAI,EAAEN,sBADD;MAELI,OAAO,EAAEM,KAAK,CAACC;IAFV,CAAD,CAAR;EAIH;AACJ,CAzBM"},"metadata":{},"sourceType":"module"}