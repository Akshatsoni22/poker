{"ast":null,"code":"import moment from 'moment';\nimport { publicIpv4 } from 'public-ip';\nexport const renderFormData = values => {\n  var formData = new FormData();\n  Object.keys(values).map(function (key, index) {\n    formData.append(key, values[key]);\n  });\n  return formData;\n};\nexport const statusOption = () => {\n  const status_option = [{\n    value: 0,\n    label: 'Approval Pending'\n  }, {\n    value: 1,\n    label: 'Approved'\n  }, {\n    value: 2,\n    label: 'Rejected'\n  } // // { value: 4, label: 'Delete' },\n  ];\n  return status_option;\n};\nexport const viewStatusOption = () => {\n  const status_option = [{\n    value: 1,\n    label: 'Approved'\n  }, {\n    value: 2,\n    label: 'Rejected'\n  },,];\n  return status_option;\n};\nexport const fillterstatusOption = () => {\n  const status_option = [{\n    value: 404,\n    label: 'Select Status'\n  }, {\n    value: 0,\n    label: 'Approval Pending'\n  }, {\n    value: 1,\n    label: 'Approved'\n  }, {\n    value: 2,\n    label: 'Rejected'\n  }];\n  return status_option;\n};\nexport const statusOptionActive = () => {\n  const status_option = [{\n    value: 5,\n    label: 'Activate'\n  }, {\n    value: 6,\n    label: 'De-Activate'\n  }];\n  return status_option;\n};\nexport const bannerStatusOption = () => {\n  const banner_status_option = [{\n    value: 0,\n    label: 'Disable'\n  }, {\n    value: 1,\n    label: 'Enable'\n  }];\n  return banner_status_option;\n};\nexport const bannerTypeOption = () => {\n  const banner_type_option = [{\n    value: 1,\n    label: 'Main Slider',\n    message: 'Image must be this ratio 1520 × 560 pixels.'\n  }, {\n    value: 2,\n    label: 'Left Small Banner',\n    message: 'Image must be this ratio 660 × 230 pixels.'\n  }, {\n    value: 3,\n    label: 'Right Small Slider',\n    message: 'Image must be this ratio 660 × 230 pixels.'\n  }, {\n    value: 4,\n    label: 'Big Banner',\n    message: 'Image must be this ratio 1350 × 290 pixels.'\n  }];\n  return banner_type_option;\n};\nexport const manufacturerStatusOption = () => {\n  const manufacturer_status_option = [{\n    value: 0,\n    label: 'Disable'\n  }, {\n    value: 1,\n    label: 'Enable'\n  }];\n  return manufacturer_status_option;\n};\nexport const bannerTypeFillterOption = () => {\n  const banner_type_option = [{\n    value: 404,\n    label: 'Select Banner Type'\n  }, {\n    value: 1,\n    label: 'Main Slider'\n  }, {\n    value: 2,\n    label: 'Left Small Banner'\n  }, {\n    value: 3,\n    label: 'Right Small Slider'\n  }, {\n    value: 4,\n    label: 'Big Banner'\n  }];\n  return banner_type_option;\n};\nexport const categoryStatusOption = () => {\n  const category_status_option = [{\n    value: 0,\n    label: 'Disable'\n  }, {\n    value: 1,\n    label: 'Enable'\n  }];\n  return category_status_option;\n};\nexport const productStatusOption = () => {\n  const product_status_option = [{\n    value: 0,\n    label: 'Disable'\n  }, {\n    value: 1,\n    label: 'Enable'\n  }];\n  return product_status_option;\n};\nexport const getDate = date => {\n  const formattedDate = moment(new Date(date)).format('DD, MMMM, YYYY');\n  return formattedDate;\n};\nexport const getLastURL = location => {\n  let lastURL = location && location.pathname && location.pathname.split('/') && location.pathname.split('/').pop();\n  return lastURL;\n};\nexport const encodeID = id => {\n  return id;\n};\nexport const decodeID = id => {\n  return id;\n};\nexport const formatMoney = amount => {\n  return amount.toLocaleString('en-US', {\n    style: 'currency',\n    currency: 'INR'\n  }); // return '₹ '+amount.toLocaleString('en-US');\n};\nexport const getIpAddress = async () => {\n  let ipAddress = '127.0.0.1';\n\n  if (await publicIpv4()) {\n    ipAddress = await publicIpv4();\n  }\n\n  return ipAddress;\n};","map":{"version":3,"names":["moment","publicIpv4","renderFormData","values","formData","FormData","Object","keys","map","key","index","append","statusOption","status_option","value","label","viewStatusOption","fillterstatusOption","statusOptionActive","bannerStatusOption","banner_status_option","bannerTypeOption","banner_type_option","message","manufacturerStatusOption","manufacturer_status_option","bannerTypeFillterOption","categoryStatusOption","category_status_option","productStatusOption","product_status_option","getDate","date","formattedDate","Date","format","getLastURL","location","lastURL","pathname","split","pop","encodeID","id","decodeID","formatMoney","amount","toLocaleString","style","currency","getIpAddress","ipAddress"],"sources":["/home/nhz/admin (1)/src/Utils/Helper.ts"],"sourcesContent":["import moment from 'moment';\nimport { publicIpv4 } from 'public-ip';\nexport const renderFormData = (values: any) => {\n    var formData = new FormData();\n    Object.keys(values).map(function (key, index) {\n        formData.append(key, values[key])\n    });\n    return formData\n}\n\nexport const statusOption = () => {\n    const status_option = [ \n        { value: 0, label: 'Approval Pending' },\n        { value: 1, label: 'Approved' },\n        { value: 2, label: 'Rejected' },\n        // // { value: 4, label: 'Delete' },\n    ];\n    return status_option\n}\n\nexport const viewStatusOption = () => {\n    const status_option = [\n        { value: 1, label: 'Approved' },\n        { value: 2, label: 'Rejected' },,\n    ];\n    return status_option\n}\n\nexport const fillterstatusOption = () => {\n    const status_option = [\n        { value: 404, label: 'Select Status' },\n        { value: 0, label: 'Approval Pending' },\n        { value: 1, label: 'Approved' },\n        { value: 2, label: 'Rejected' },\n    ];\n    return status_option\n}\n\nexport const statusOptionActive = () => {\n    const status_option = [\n        { value: 5, label: 'Activate' },\n        { value: 6, label: 'De-Activate' },\n    ];\n    return status_option\n}\n\nexport const bannerStatusOption = () => {\n    const banner_status_option = [ \n        { value: 0, label: 'Disable' },\n        { value: 1, label: 'Enable' },\n    ];\n    return banner_status_option\n}\n\nexport const bannerTypeOption = () => {\n    const banner_type_option = [ \n        { value: 1, label: 'Main Slider', message: 'Image must be this ratio 1520 × 560 pixels.' },\n        { value: 2, label: 'Left Small Banner', message: 'Image must be this ratio 660 × 230 pixels.' },\n        { value: 3, label: 'Right Small Slider', message: 'Image must be this ratio 660 × 230 pixels.' },\n        { value: 4, label: 'Big Banner', message: 'Image must be this ratio 1350 × 290 pixels.' },\n    ];\n    return banner_type_option\n}\n\nexport const manufacturerStatusOption = () => {\n    const manufacturer_status_option = [ \n        { value: 0, label: 'Disable' },\n        { value: 1, label: 'Enable' },\n    ];\n    return manufacturer_status_option\n}\n\nexport const bannerTypeFillterOption = () => {\n    const banner_type_option = [ \n        { value: 404, label: 'Select Banner Type' },\n        { value: 1, label: 'Main Slider' },\n        { value: 2, label: 'Left Small Banner' },\n        { value: 3, label: 'Right Small Slider' },\n        { value: 4, label: 'Big Banner' },\n    ];\n    return banner_type_option\n}\n\nexport const categoryStatusOption = () => {\n    const category_status_option = [ \n        { value: 0, label: 'Disable' },\n        { value: 1, label: 'Enable' },\n    ];\n    return category_status_option\n}\n\nexport const productStatusOption = () => {\n    const product_status_option = [ \n        { value: 0, label: 'Disable' },\n        { value: 1, label: 'Enable' },\n    ];\n    return product_status_option\n}\n\nexport const getDate = (date:string) => {\n    const formattedDate = moment(new Date(date)).format('DD, MMMM, YYYY');\n    return formattedDate;\n}\n\nexport const getLastURL = (location: any) => {\n    let lastURL = location && location.pathname && location.pathname.split('/') && location.pathname.split('/').pop();\n    return lastURL;\n}\n\nexport const encodeID = (id: number) => {\n    return id;\n}\nexport const decodeID = (id: number) => {\n    return id;\n}\nexport const formatMoney = (amount: number) => {\n    return amount.toLocaleString('en-US', { style: 'currency', currency: 'INR' });\n    // return '₹ '+amount.toLocaleString('en-US');\n}\nexport const getIpAddress = async () => {\n    let ipAddress = '127.0.0.1';\n    if (await publicIpv4()) {\n        ipAddress = await publicIpv4();\n    }\n    return ipAddress;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}