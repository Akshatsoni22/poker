{"ast":null,"code":"import { ADMIN_DASHBOARD_COUNT_RESET, ADMIN_DASHBOARD_COUNT_REQUEST, ADMIN_DASHBOARD_COUNT_SUCCESS, ADMIN_DASHBOARD_COUNT_FAIL } from \"../../Constants/DashboardConstants\";\nimport { POSTAUTHAPI } from '../../Api/Index';\nexport const AdminDashboardCountAction = payload => async dispatch => {\n  if (payload === 'RESET') {\n    dispatch({\n      type: ADMIN_DASHBOARD_COUNT_RESET\n    });\n  } else {\n    try {\n      dispatch({\n        type: ADMIN_DASHBOARD_COUNT_REQUEST\n      });\n      let data = await POSTAUTHAPI('get-user-by-role-count', payload);\n\n      if (data && (data === null || data === void 0 ? void 0 : data.status) === true) {\n        dispatch({\n          type: ADMIN_DASHBOARD_COUNT_SUCCESS,\n          payload: data === null || data === void 0 ? void 0 : data.data\n        });\n      } else {\n        dispatch({\n          type: ADMIN_DASHBOARD_COUNT_FAIL,\n          payload: data\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: ADMIN_DASHBOARD_COUNT_FAIL,\n        payload: error.message\n      });\n    }\n  }\n};","map":{"version":3,"names":["ADMIN_DASHBOARD_COUNT_RESET","ADMIN_DASHBOARD_COUNT_REQUEST","ADMIN_DASHBOARD_COUNT_SUCCESS","ADMIN_DASHBOARD_COUNT_FAIL","POSTAUTHAPI","AdminDashboardCountAction","payload","dispatch","type","data","status","error","message"],"sources":["/home/nhz/admin (1)/src/Redux/Actions/DashboardActions.tsx"],"sourcesContent":["import { Dispatch } from \"react\";\nimport {\n    ADMIN_DASHBOARD_COUNT_RESET,\n    ADMIN_DASHBOARD_COUNT_REQUEST,\n    ADMIN_DASHBOARD_COUNT_SUCCESS,\n    ADMIN_DASHBOARD_COUNT_FAIL,  \n} from \"../../Constants/DashboardConstants\";\nimport { POSTAUTHAPI } from '../../Api/Index';\n\nexport const AdminDashboardCountAction = (payload: any) => async (dispatch: Dispatch<any>) => {\n    if (payload === 'RESET') {\n        dispatch({ type: ADMIN_DASHBOARD_COUNT_RESET });\n    }\n    else {\n        try {\n            dispatch({\n                type: ADMIN_DASHBOARD_COUNT_REQUEST\n            });\n            let data = await POSTAUTHAPI('get-user-by-role-count', payload);\n            if (data && data?.status === true) {\n                dispatch({\n                    type: ADMIN_DASHBOARD_COUNT_SUCCESS,\n                    payload: data?.data\n                });\n            }\n            else {\n                dispatch({\n                    type: ADMIN_DASHBOARD_COUNT_FAIL,\n                    payload: data\n                });\n            }\n        }\n        catch (error: any) {\n            dispatch({\n                type: ADMIN_DASHBOARD_COUNT_FAIL,\n                payload: error.message\n            });\n        }\n    }\n};"],"mappings":"AACA,SACIA,2BADJ,EAEIC,6BAFJ,EAGIC,6BAHJ,EAIIC,0BAJJ,QAKO,oCALP;AAMA,SAASC,WAAT,QAA4B,iBAA5B;AAEA,OAAO,MAAMC,yBAAyB,GAAIC,OAAD,IAAkB,MAAOC,QAAP,IAAmC;EAC1F,IAAID,OAAO,KAAK,OAAhB,EAAyB;IACrBC,QAAQ,CAAC;MAAEC,IAAI,EAAER;IAAR,CAAD,CAAR;EACH,CAFD,MAGK;IACD,IAAI;MACAO,QAAQ,CAAC;QACLC,IAAI,EAAEP;MADD,CAAD,CAAR;MAGA,IAAIQ,IAAI,GAAG,MAAML,WAAW,CAAC,wBAAD,EAA2BE,OAA3B,CAA5B;;MACA,IAAIG,IAAI,IAAI,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEC,MAAN,MAAiB,IAA7B,EAAmC;QAC/BH,QAAQ,CAAC;UACLC,IAAI,EAAEN,6BADD;UAELI,OAAO,EAAEG,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEA;QAFV,CAAD,CAAR;MAIH,CALD,MAMK;QACDF,QAAQ,CAAC;UACLC,IAAI,EAAEL,0BADD;UAELG,OAAO,EAAEG;QAFJ,CAAD,CAAR;MAIH;IACJ,CAjBD,CAkBA,OAAOE,KAAP,EAAmB;MACfJ,QAAQ,CAAC;QACLC,IAAI,EAAEL,0BADD;QAELG,OAAO,EAAEK,KAAK,CAACC;MAFV,CAAD,CAAR;IAIH;EACJ;AACJ,CA9BM"},"metadata":{},"sourceType":"module"}